name: Java CI with Maven
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  mavenbuild:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: Build with Maven
      run: |
        cd backend
        mvn -B package --file pom.xml

    - name: Backend Deploy
      run : sudo cp -r /home/aishwarya/newcurd-githubrunner/_work/newcurd/newcurd/backend/target/fullstack-0.0.1-SNAPSHOT.war /opt/tomcat/webapps

 
  reactBuild:
      runs-on: self-hosted
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18
    
        - name: npm install, build, and test
          run: |
            cd frontend/react-frontend
            npm install
             CI='' npm run build
            #npm run build

        - name: deploying build folder
          run:  sudo cp -r /home/aishwarya/actions-runner/_work/newcurd/newcurd/frontend/react-frontend/build/* /var/www/html

        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11
        - name: Cache SonarQube packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.ASH_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=test-github
    # - name: Upload artifacts
     #  uses: actions/upload-artifact@v2
      # with:
       # name: build-output
        #path: path/to/your/build/output  # Change to the path where your build artifacts are
    # - name: Deploy or other actions
      # You can add additional steps here, like deploying to a server or publishing to npm
     
